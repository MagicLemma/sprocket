#pragma once
// Functions for loading C++ implemented Lua functions into the given
// lua state.

struct lua_State;

namespace Sprocket {

class Scene;
class Window;
class InputProxy;

namespace lua {

class Script;

// Loads the given scene into the given lua state, and provides functions for
// creating/deleting entities as well as iterating entities.
void register_scene_functions(lua::Script& script, Scene& scene);

// Loads the given input proxy into the given lua state, and provides functions
// for checking if keyboard and mouse buttons are currently pressed.
void register_input_functions(lua::Script& script, InputProxy& input);

// Loads the given window into the given lua state, and provides functions for
// checking the current mouse position and the mouse offset from the previous frame.
void register_window_functions(lua::Script& script, Window& window);

// Loads a bunch of helper functions to ease entity manipulation.
void register_entity_transformation_functions(lua::Script& script);

// Loads functions for accessing and modifying components on entities. The implementation
// of this is generated by Datamatic.
void register_entity_component_functions(lua::Script& script);

}
}